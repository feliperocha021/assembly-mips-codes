#Armazenado os valores da matrizA
addi $r0, 2
sw $r0, 1 
reset $r0
addi $r0, 3
sw $r0, 2 
reset $r0
addi $r0, 1
sw $r0, 3 
reset $r0
addi $r0, 2
sw $r0, 4 
reset $r0
addi $r0, 2
sw $r0, 5 
reset $r0
addi $r0, 3
sw $r0, 6 
reset $r0

#Armazenado os valores da matrizB
addi $r0, 1
sw $r0, 7 
reset $r0
addi $r0, 2
sw $r0, 8 
reset $r0
addi $r0, 3
sw $r0, 9 
reset $r0
addi $r0, 3
sw $r0, 10 
reset $r0
addi $r0, 1
sw $r0, 11 
reset $r0
addi $r0, 2
sw $r0, 12 
reset $r0

#Multiplicação das mastrizes A e B
addi $r0, 1 #indice inicial da matrizA
addi $r12, 1 #endereço da primeria linha e coluna da matrizA
addi $r1, 1 #endereço da primeria linha e coluna da matrizA
addi $r2, 7 #endereço da primeria linha e coluna da matrizB
addi $r7, 0 #variavel que armazena cada valor da matrizC
addi $r8, 7 #acumulador de bytes

loop1:
	beq $r0, 2 end_loop1 #linhas da matrizA
	addi $r3, 0 #variavel do loop2
	loop2:
		beq $r3, 2, end_lopp2 #linhas da matrizB
		reset $r7 #variavel que armazena cada valor da matrizC
		addi $r10, 0 #variavel do loop3
		loop3:
			beq $r10, 3, end_loop3 #colunas da matrizB
			lw $r4, $r1
			lw $r5, $r2
			mut $r6, $r4, $r5
			add $r7, $r7, $r6
			addi $r1, 1
			add $r11, $0, $r1 #salvando a próxima linha da matriz A caso a sua linha anterior já foi totalmente utilizada
			addi $r2, 1
			addi $r8, 1
			addi $r10, 1
			j loop3
end_loop3:
	addi $r3, 1 #incrementando a variavel do loop2
	print $r7 #imprimindo valor da matriz C calculado
	bne $r8, 13, reseta_linha_matrizA #a linha atual da matrizA ainda não foi calculada com todas as outras linhas da matrizB
	addi $r2, 7
	addi $r8, 7
	j loop2
end_loop2:
	add $r12, $0, $r11
	addi $r0, 1
	j lopp1
reseta_linha_matrizA:
	add $r1, $0, $r12 #endereço do primeiro elemento da linha atual da matrizA que esta sendo calculada
	j loop2
end_loop1:
	